// Mocks generated by Mockito 5.3.2 from annotations
// in mini_projeck/test/unit_testing/materi_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mini_projeck/models/materi_model.dart' as _i2;
import 'package:mini_projeck/services/materi_services.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMateriModel_0 extends _i1.SmartFake implements _i2.MateriModel {
  _FakeMateriModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MateriServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockMateriServices extends _i1.Mock implements _i3.MateriServices {
  MockMateriServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.MateriModel> addMateri(
    String? bab,
    String? judul,
    String? urlMateri,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMateri,
          [
            bab,
            judul,
            urlMateri,
          ],
        ),
        returnValue: _i4.Future<_i2.MateriModel>.value(_FakeMateriModel_0(
          this,
          Invocation.method(
            #addMateri,
            [
              bab,
              judul,
              urlMateri,
            ],
          ),
        )),
      ) as _i4.Future<_i2.MateriModel>);
  @override
  _i4.Stream<List<_i2.MateriModel>> inisialData(String? kategory) =>
      (super.noSuchMethod(
        Invocation.method(
          #inisialData,
          [kategory],
        ),
        returnValue: _i4.Stream<List<_i2.MateriModel>>.empty(),
      ) as _i4.Stream<List<_i2.MateriModel>>);
  @override
  _i4.Future<void> deleteMateri(
    String? id,
    String? bab,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMateri,
          [
            id,
            bab,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> editmateri({
    required String? id,
    required String? judul,
    required String? urlEdit,
    required String? bab,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editmateri,
          [],
          {
            #id: id,
            #judul: judul,
            #urlEdit: urlEdit,
            #bab: bab,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
